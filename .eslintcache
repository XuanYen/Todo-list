[{"F:\\test\\src\\reducers\\todos.js":"1","F:\\test\\src\\reducers\\index.js":"2","F:\\test\\src\\App.js":"3","F:\\test\\src\\components\\TodoApp.js":"4","F:\\test\\src\\index.js":"5","F:\\test\\src\\reportWebVitals.js":"6"},{"size":880,"mtime":1612407885640,"results":"7","hashOfConfig":"8"},{"size":574,"mtime":1612409307149,"results":"9","hashOfConfig":"8"},{"size":419,"mtime":1612409147485,"results":"10","hashOfConfig":"8"},{"size":1361,"mtime":1612407714999,"results":"11","hashOfConfig":"8"},{"size":517,"mtime":1612280546013,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1611971802823,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1mdg7pz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"F:\\test\\src\\reducers\\todos.js",[],["29","30"],"F:\\test\\src\\reducers\\index.js",["31","32"],"F:\\test\\src\\App.js",["33"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from './reducers/index.js';\r\nimport TodoApp from './components/TodoApp';\r\n\r\nconst store=configStore();\r\nfunction App() {\r\n  return (\r\n  <Provider store={store}> \r\n    <div className=\"App\">\r\n      <TodoApp />\r\n    </div>\r\n  </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\test\\src\\components\\TodoApp.js",["34"],"import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo, setTodos, fetchTodos} from '../reducers/todos';\r\n\r\n\r\nfunction TodoApp(props){\r\n    const [text, setText]=useState('');\r\n    /*useEffect(()=>{\r\n        axios.get('https://jsonplaceholder.typicode.com/todos').then(res=>{\r\n            props.setTodos(res.data)\r\n        })\r\n    },[props.setTodos])*/\r\n\r\n    useEffect(()=>{props.fetchTodos()},[props.fetchTodos])\r\n    return(\r\n        <div>\r\n            <input type='text' value={text} onChange={e=>setText(e.target.value)} />\r\n            <button onClick={()=>{\r\n                props.addTodo(text);\r\n                setText('');\r\n            }}>Add</button>\r\n            <ul>\r\n                {props.todos.map(todo=><li key={todo.id}>{todo.title}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        todos: state.todos.items\r\n    }\r\n}\r\nconst mapActionsToProps=dispatch=>({\r\n    addTodo: (text)=>dispatch(addTodo(text)),\r\n    setTodos: (items)=>dispatch(setTodos(items)),\r\n    /*fetchTodos: ()=>{\r\n        axios.get('https://jsonplaceholder.typicode.com/todos').then(res=>{\r\n            dispatch(setTodos(res.data))\r\n        })\r\n    }*/\r\n    fetchTodos: ()=>dispatch(fetchTodos())\r\n})\r\nexport default connect(mapStateToProps, mapActionsToProps)(TodoApp);","F:\\test\\src\\index.js",[],"F:\\test\\src\\reportWebVitals.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":9,"column":19,"nodeType":"41","messageId":"42","endLine":9,"endColumn":21},{"ruleId":"39","severity":1,"message":"40","line":9,"column":49,"nodeType":"41","messageId":"42","endLine":9,"endColumn":51},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"48","line":14,"column":40,"nodeType":"49","endLine":14,"endColumn":58,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [props, props.fetchTodos]",{"range":"56","text":"57"},[458,476],"[props, props.fetchTodos]"]